{
  "version": 3,
  "sources": ["../../../../src/foundation/HydrogenRequest/HydrogenRequest.test.ts"],
  "sourcesContent": ["import { IncomingMessage } from 'http'\n\nimport { describe, expect, it } from 'vitest'\n\nimport { CacheLong, CacheNone, CacheShort } from '../../Cache/strategies/index.js'\nimport { RSC_PATHNAME } from '../../constants.js'\nimport { PreloadOptions } from '../../types.js'\nimport { shouldPreloadQuery } from '../../useQuery/index.js'\nimport { HydrogenRequest, PreloadQueryEntry } from './HydrogenRequest.server.js'\n\ndescribe('HydrogenRequest', () => {\n  it('converts node request to Fetch API request', () => {\n    const request = createHydrogenRequest('/', {\n      'user-agent': 'Shopify Computer',\n    })\n    expect(request.headers.get('user-agent')).toBe('Shopify Computer')\n  })\n\n  describe('Cookies', () => {\n    it('creats a empty Map of cookies by default', () => {\n      const request = createHydrogenRequest('/')\n      expect(request.cookies.size).toBe(0)\n    })\n\n    it('provides just a really nice interface for Cookies', () => {\n      const request = createHydrogenRequest('/', {\n        cookie: 'shopifyCartId=12345; favoriteFruit=apple;',\n      })\n\n      expect(request.cookies.size).toBe(2)\n      expect(request.cookies.get('shopifyCartId')).toBe('12345')\n    })\n\n    it('handles JSON serialized Cookies', () => {\n      const cookieKey = 'productIds'\n      const productIds = ['productId1=', 'productId2=']\n      const serializedProductIds = JSON.stringify(productIds)\n\n      const request = createHydrogenRequest('/', {\n        cookie: `shopifyCartId=12345; ${cookieKey}=${serializedProductIds}`,\n      })\n\n      expect(JSON.parse(request.cookies.get(cookieKey)!)).toStrictEqual(productIds)\n    })\n  })\n\n  it('Preloads queries with default cache', () => {\n    expect(shouldPreloadQuery()).toBe(true)\n    expect(shouldPreloadQuery({})).toBe(true)\n    expect(shouldPreloadQuery({ cache: {} })).toBe(true)\n  })\n\n  it('Preloads queries with manual cache', () => {\n    expect(shouldPreloadQuery({ cache: CacheShort() })).toBe(true)\n    expect(shouldPreloadQuery({ cache: CacheLong() })).toBe(true)\n  })\n\n  it('Does not preload with no cache', () => {\n    expect(shouldPreloadQuery({ cache: CacheNone() })).toBe(false)\n  })\n\n  it('Does not preload with default cache and preloading explicitly turned off', () => {\n    expect(shouldPreloadQuery({ preload: false })).toBe(false)\n    expect(shouldPreloadQuery({ cache: {}, preload: false })).toBe(false)\n  })\n\n  it('Does not preload with manual cache and preloading explicitly turned off', () => {\n    expect(shouldPreloadQuery({ cache: CacheShort(), preload: false })).toBe(false)\n    expect(shouldPreloadQuery({ cache: CacheLong(), preload: false })).toBe(false)\n  })\n\n  it('Preloads queries with caching disabled and preloading explicitly turned on', () => {\n    expect(shouldPreloadQuery({ cache: CacheNone(), preload: true })).toBe(true)\n  })\n\n  it('saves preload queries', () => {\n    const request = createHydrogenRequest(`https://localhost:3000/`)\n    request.savePreloadQuery(createPreloadQueryEntry('test1', true))\n    request.savePreloadQueries()\n\n    const preloadQueries = request.getPreloadQueries()\n    expect(preloadQueries).toBeDefined()\n    expect(preloadQueries && preloadQueries.get('test1')).toMatchInlineSnapshot(`\n      Object {\n        \"fetcher\": [Function],\n        \"key\": Array [\n          \"test1\",\n        ],\n        \"preload\": true,\n      }\n    `)\n  })\n\n  it('get preload queries on sub-sequent load', () => {\n    const request = createHydrogenRequest(`https://localhost:3000/`)\n    request.savePreloadQuery(createPreloadQueryEntry('test1', true))\n    request.savePreloadQueries()\n\n    const request2 = createHydrogenRequest(`https://localhost:3000/`)\n\n    const preloadQueries = request2.getPreloadQueries()\n    expect(preloadQueries).toBeDefined()\n    expect(preloadQueries && preloadQueries.get('test1')).toMatchInlineSnapshot(`\n      Object {\n        \"fetcher\": [Function],\n        \"key\": Array [\n          \"test1\",\n        ],\n        \"preload\": true,\n      }\n    `)\n  })\n\n  it('populates buyer IP using Node socket by default', () => {\n    const request = createHydrogenRequest('/', undefined, '123.4.5.6')\n\n    expect(request.getBuyerIp()).toBe('123.4.5.6')\n  })\n\n  it('allows buyer IP header to be overridden', () => {\n    const request = createHydrogenRequest('/', { foo: '234.5.6.7' })\n    request.ctx.buyerIpHeader = 'foo'\n\n    expect(request.getBuyerIp()).toBe('234.5.6.7')\n  })\n\n  it('provides a normalized URL for both RSC and standard requests', () => {\n    const request = createHydrogenRequest('https://shopify.dev/foo?bar=baz')\n    expect(request.normalizedUrl).toBe('https://shopify.dev/foo?bar=baz')\n\n    const rscRequest = createHydrogenRequest(\n      `https://shopify.dev${RSC_PATHNAME}?state=${encodeURIComponent(\n        JSON.stringify({ pathname: '/foo', search: '?bar=baz' })\n      )}`\n    )\n    expect(rscRequest.normalizedUrl).toBe('https://shopify.dev/foo?bar=baz')\n  })\n})\n\nfunction createHydrogenRequest(\n  url: string,\n  headers?: Record<string, string>,\n  remoteAddress?: string\n): HydrogenRequest {\n  // @ts-ignore\n  const nodeRequest = new IncomingMessage()\n  nodeRequest.method = 'GET'\n  nodeRequest.url = url\n  nodeRequest.headers = headers ?? {}\n  // @ts-ignore\n  nodeRequest.socket = { remoteAddress: remoteAddress ?? '127.0.0.1' }\n\n  return new HydrogenRequest(nodeRequest)\n}\n\nfunction createPreloadQueryEntry(key: string, preload?: PreloadOptions): PreloadQueryEntry {\n  return {\n    key: [key],\n    fetcher: createFetcher(key),\n    preload,\n  }\n}\n\nfunction createFetcher(data: unknown): () => Promise<unknown> {\n  return () => Promise.resolve(data)\n}\n"],
  "mappings": "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",
  "names": []
}
