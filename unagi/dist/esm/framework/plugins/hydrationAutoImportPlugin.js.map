{
  "version": 3,
  "sources": ["../../../../src/framework/plugins/hydrationAutoImportPlugin.ts"],
  "sourcesContent": ["import path from 'path'\n\nimport MagicString from 'magic-string'\nimport { Plugin, ResolvedConfig, normalizePath } from 'vite'\n\nconst UNAGI_ENTRY_FILE = 'unagi-entry-client.jsx'\n\nexport default () => {\n  let config: ResolvedConfig\n  return {\n    name: 'vite-plugin-hydration-auto-import',\n    enforce: 'pre',\n    configResolved(_config) {\n      config = _config\n    },\n    resolveId(id, importer) {\n      console.log('hydartion autio', id, importer)\n      if (\n        (/^\\/?@tamagui\\/unagi\\/entry-client$/.test(id) ||\n          id.endsWith(path.sep + UNAGI_ENTRY_FILE)) &&\n        normalizePath(importer || '').endsWith('/index.html')\n      ) {\n        // Make this virtual import look like a local project file\n        // to enable React Refresh normally.\n        return path.join(config.root, UNAGI_ENTRY_FILE + '?virtual')\n      }\n\n      return null\n    },\n    load(id) {\n      if (id.includes(UNAGI_ENTRY_FILE + '?virtual')) {\n        const code = new MagicString(\n          `import renderUnagi from '@tamagui/unagi/entry-client';\\n` +\n            `export default renderUnagi((props) => props.children);`\n        )\n\n        return {\n          code: code.toString(),\n          map: { mappings: '' },\n        }\n      }\n\n      return null\n    },\n  } as Plugin\n}\n"],
  "mappings": "AAAA;AAEA;AACA;AAEA,MAAM,mBAAmB;AAEzB,IAAO,oCAAQ,MAAM;AACnB,MAAI;AACJ,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,eAAe,SAAS;AACtB,eAAS;AAAA,IACX;AAAA,IACA,UAAU,IAAI,UAAU;AACtB,cAAQ,IAAI,mBAAmB,IAAI,QAAQ;AAC3C,UACG,sCAAqC,KAAK,EAAE,KAC3C,GAAG,SAAS,KAAK,MAAM,gBAAgB,MACzC,cAAc,YAAY,EAAE,EAAE,SAAS,aAAa,GACpD;AAGA,eAAO,KAAK,KAAK,OAAO,MAAM,mBAAmB,UAAU;AAAA,MAC7D;AAEA,aAAO;AAAA,IACT;AAAA,IACA,KAAK,IAAI;AACP,UAAI,GAAG,SAAS,mBAAmB,UAAU,GAAG;AAC9C,cAAM,OAAO,IAAI,YACf;AAAA,uDAEF;AAEA,eAAO;AAAA,UACL,MAAM,KAAK,SAAS;AAAA,UACpB,KAAK,EAAE,UAAU,GAAG;AAAA,QACtB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AACF;",
  "names": []
}
