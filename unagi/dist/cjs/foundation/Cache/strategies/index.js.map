{
  "version": 3,
  "sources": ["../../../../../src/foundation/Cache/strategies/index.ts"],
  "sourcesContent": ["import type { AllCacheOptions, CachingStrategy, NoStoreStrategy } from '../../../types.js'\n\nconst PUBLIC = 'public'\nconst PRIVATE = 'private'\nexport const NO_STORE = 'no-store'\n\nconst optionMapping: {\n  [key: string]: string\n} = {\n  maxAge: 'max-age',\n  staleWhileRevalidate: 'stale-while-revalidate',\n  sMaxAge: 's-maxage',\n  staleIfError: 'stale-if-error',\n}\n\nexport function generateCacheControlHeader(cacheOptions: CachingStrategy): string {\n  const cacheControl: string[] = []\n  Object.keys(cacheOptions).forEach((key: string) => {\n    if (key === 'mode') {\n      cacheControl.push(cacheOptions[key] as string)\n    } else if (optionMapping[key]) {\n      cacheControl.push(`${optionMapping[key]}=${cacheOptions[key as keyof CachingStrategy]}`)\n    }\n  })\n  return cacheControl.join(', ')\n}\n\nexport function CacheNone(): NoStoreStrategy {\n  return {\n    mode: NO_STORE,\n  }\n}\n\nfunction guardExpirableModeType(overrideOptions?: CachingStrategy) {\n  if (\n    overrideOptions?.mode &&\n    overrideOptions?.mode !== PUBLIC &&\n    overrideOptions?.mode !== PRIVATE\n  ) {\n    throw Error(\"'mode' must be either 'public' or 'private'\")\n  }\n}\n\nexport function CacheShort(overrideOptions?: CachingStrategy): AllCacheOptions {\n  guardExpirableModeType(overrideOptions)\n  return {\n    mode: PUBLIC,\n    maxAge: 1,\n    staleWhileRevalidate: 9,\n    ...overrideOptions,\n  }\n}\n\nexport function CacheLong(overrideOptions?: CachingStrategy): AllCacheOptions {\n  guardExpirableModeType(overrideOptions)\n  return {\n    mode: PUBLIC,\n    maxAge: 3600, // 1 hour\n    staleWhileRevalidate: 82800, // 23 Hours\n    ...overrideOptions,\n  }\n}\n\nexport function CacheCustom(overrideOptions: CachingStrategy): AllCacheOptions {\n  return overrideOptions as AllCacheOptions\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAM,SAAS;AACf,MAAM,UAAU;AACT,MAAM,WAAW;AAExB,MAAM,gBAEF;AAAA,EACF,QAAQ;AAAA,EACR,sBAAsB;AAAA,EACtB,SAAS;AAAA,EACT,cAAc;AAChB;AAEO,oCAAoC,cAAuC;AAChF,QAAM,eAAyB,CAAC;AAChC,SAAO,KAAK,YAAY,EAAE,QAAQ,CAAC,QAAgB;AACjD,QAAI,QAAQ,QAAQ;AAClB,mBAAa,KAAK,aAAa,IAAc;AAAA,IAC/C,WAAW,cAAc,MAAM;AAC7B,mBAAa,KAAK,GAAG,cAAc,QAAQ,aAAa,MAA+B;AAAA,IACzF;AAAA,EACF,CAAC;AACD,SAAO,aAAa,KAAK,IAAI;AAC/B;AAEO,qBAAsC;AAC3C,SAAO;AAAA,IACL,MAAM;AAAA,EACR;AACF;AAEA,gCAAgC,iBAAmC;AACjE,MACE,oDAAiB,SACjB,oDAAiB,UAAS,UAC1B,oDAAiB,UAAS,SAC1B;AACA,UAAM,MAAM,6CAA6C;AAAA,EAC3D;AACF;AAEO,oBAAoB,iBAAoD;AAC7E,yBAAuB,eAAe;AACtC,SAAO;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,sBAAsB;AAAA,IACtB,GAAG;AAAA,EACL;AACF;AAEO,mBAAmB,iBAAoD;AAC5E,yBAAuB,eAAe;AACtC,SAAO;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,sBAAsB;AAAA,IACtB,GAAG;AAAA,EACL;AACF;AAEO,qBAAqB,iBAAmD;AAC7E,SAAO;AACT;",
  "names": []
}
