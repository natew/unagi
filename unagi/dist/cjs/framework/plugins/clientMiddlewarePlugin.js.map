{
  "version": 3,
  "sources": ["../../../../src/framework/plugins/clientMiddlewarePlugin.ts"],
  "sourcesContent": ["import { Plugin, send } from 'vite'\n\n/**\n * This dev server middleware prevents Vite from applying immutable cache control headers to client\n * components. These client components are part of the user's local source, but since they are\n * referenced via import globs in the `react-dom-server-vite` NPM package, Vite assumes they\n * are 3P deps that can be cached. This middleware responds to the requests early with `no-cache`.\n */\nexport default () => {\n  return {\n    name: 'vite-plugin-unagi-client-middleware',\n    enforce: 'pre',\n    configureServer(server) {\n      server.middlewares.use(async (req, res, next) => {\n        const url = req.url!\n\n        try {\n          if (/\\.client\\.[jt]sx?\\?v=/.test(url) && !/\\/node_modules\\//.test(url)) {\n            const result = await server.transformRequest(url, { html: false })\n            if (result) {\n              return send(req, res, result.code, 'js', {\n                etag: result.etag,\n                cacheControl: 'no-cache',\n                headers: server.config.server.headers,\n                map: result.map,\n              })\n            }\n          }\n        } catch (e) {\n          next(e)\n        }\n\n        next()\n      })\n    },\n  } as Plugin\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA6B;AAQ7B,IAAO,iCAAQ,MAAM;AACnB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,gBAAgB,QAAQ;AACtB,aAAO,YAAY,IAAI,OAAO,KAAK,KAAK,SAAS;AAC/C,cAAM,MAAM,IAAI;AAEhB,YAAI;AACF,cAAI,wBAAwB,KAAK,GAAG,KAAK,CAAC,mBAAmB,KAAK,GAAG,GAAG;AACtE,kBAAM,SAAS,MAAM,OAAO,iBAAiB,KAAK,EAAE,MAAM,MAAM,CAAC;AACjE,gBAAI,QAAQ;AACV,qBAAO,sBAAK,KAAK,KAAK,OAAO,MAAM,MAAM;AAAA,gBACvC,MAAM,OAAO;AAAA,gBACb,cAAc;AAAA,gBACd,SAAS,OAAO,OAAO,OAAO;AAAA,gBAC9B,KAAK,OAAO;AAAA,cACd,CAAC;AAAA,YACH;AAAA,UACF;AAAA,QACF,SAAS,GAAP;AACA,eAAK,CAAC;AAAA,QACR;AAEA,aAAK;AAAA,MACP,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
