{
  "version": 3,
  "sources": ["../../../../src/framework/plugins/platformEntryPlugin.ts"],
  "sourcesContent": ["import fs from 'fs'\nimport path from 'path'\n\nimport fastGlob from 'fast-glob'\nimport MagicString from 'magic-string'\nimport { Plugin, ResolvedConfig, normalizePath } from 'vite'\n\nimport { UNAGI_DEFAULT_SERVER_ENTRY } from './virtualFilesPlugin'\n\nconst SSR_BUNDLE_NAME = 'index.js'\n\n// Keep this in the outer scope to share it\n// across client <> server builds.\nlet clientBuildPath: string\n\nexport default () => {\n  let config: ResolvedConfig\n  let isESM: boolean\n\n  return {\n    name: 'unagi:platform-entry',\n    enforce: 'pre',\n    configResolved(_config) {\n      config = _config\n\n      if (config.build.ssr) {\n        const { output = {} } = config.build.rollupOptions || {}\n        const { format = '' } = (Array.isArray(output) ? output[0] : output) || {}\n\n        isESM = Boolean(process.env.WORKER) || ['es', 'esm'].includes(format)\n      }\n    },\n    resolveId(source, importer) {\n      console.log('platform entry', source, importer)\n      if (normalizePath(source).includes('/unagi/platforms/')) {\n        const unagiPath = path.dirname(require.resolve('@tamagui/unagi/package.json'))\n        const platformEntryName = source.split(path.sep).pop() || ''\n        const platformEntryPath = path.resolve(\n          unagiPath,\n          'dist',\n          'esnext',\n          'platforms',\n          platformEntryName\n        )\n\n        return this.resolve(platformEntryPath, importer, {\n          skipSelf: true,\n        })\n      }\n\n      return null\n    },\n    async transform(code, id, options) {\n      if (\n        config.command === 'build' &&\n        options?.ssr &&\n        /@tamagui\\/unagi\\/.+platforms\\/virtual\\./.test(normalizePath(id))\n      ) {\n        const ms = new MagicString(code)\n\n        ms.replace('__UNAGI_ENTRY__', UNAGI_DEFAULT_SERVER_ENTRY)\n\n        if (!clientBuildPath) {\n          // Default value\n          clientBuildPath = normalizePath(\n            path.resolve(config.root, config.build.outDir, '..', 'client')\n          )\n        }\n\n        ms.replace(\n          '__UNAGI_HTML_TEMPLATE__',\n          normalizePath(path.resolve(clientBuildPath, 'index.html'))\n        )\n\n        ms.replace(\n          '__UNAGI_RELATIVE_CLIENT_BUILD__',\n          normalizePath(\n            path.relative(\n              normalizePath(path.resolve(config.root, config.build.outDir)),\n              clientBuildPath\n            )\n          )\n        )\n\n        const files = clientBuildPath\n          ? (\n              await fastGlob('**/*', {\n                cwd: clientBuildPath,\n                ignore: ['**/index.html', `**/${config.build.assetsDir}/**`],\n              })\n            ).map((file) => '/' + file)\n          : []\n\n        ms.replace(\"\\\\['__UNAGI_ASSETS__'\\\\]\", JSON.stringify(files))\n        ms.replace('__UNAGI_ASSETS_DIR__', config.build.assetsDir)\n        ms.replace(\n          '__UNAGI_ASSETS_BASE_URL__',\n          (process.env.UNAGI_ASSET_BASE_URL || '').replace(/\\/$/, '')\n        )\n\n        // Remove the poison pill\n        ms.replace('throw', '//')\n\n        return {\n          code: ms.toString(),\n          map: ms.generateMap({ file: id, source: id }),\n        }\n      }\n    },\n    buildEnd(err) {\n      if (!err && !config.build.ssr && config.command === 'build') {\n        // Save outDir from client build in the outer scope in order\n        // to read it during the server build. The CLI runs Vite in\n        // the same process so the scope is shared across builds.\n        clientBuildPath = normalizePath(path.resolve(config.root, config.build.outDir))\n      }\n    },\n    generateBundle(options, bundle) {\n      if (config.build.ssr) {\n        const [key, value] = Object.entries(bundle).find(\n          ([, value]) => value.type === 'chunk' && value.isEntry\n        )!\n\n        delete bundle[key]\n        value.fileName = SSR_BUNDLE_NAME\n        bundle[SSR_BUNDLE_NAME] = value\n\n        // This ensures the file has a proper\n        // default export instead of exporting an\n        // object containing a 'default' property.\n        if (value.type === 'chunk' && !isESM) {\n          value.code += `\\nmodule.exports = exports.default || exports;`\n        }\n      }\n    },\n    writeBundle(options) {\n      if (config.build.ssr && options.dir) {\n        const mainFile = `./${SSR_BUNDLE_NAME}`\n        const packageJson = {\n          type: isESM ? 'module' : 'commonjs',\n          main: mainFile,\n          exports: { '.': mainFile, [mainFile]: mainFile },\n        }\n\n        fs.writeFileSync(\n          path.join(options.dir, 'package.json'),\n          JSON.stringify(packageJson, null, 2),\n          'utf-8'\n        )\n      }\n    },\n  } as Plugin\n}\n"],
  "mappings": "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",
  "names": []
}
