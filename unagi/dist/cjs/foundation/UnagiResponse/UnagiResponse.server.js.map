{
  "version": 3,
  "sources": ["../../../../src/foundation/UnagiResponse/UnagiResponse.server.ts"],
  "sourcesContent": ["import React from 'react'\n\nimport type { CachingStrategy } from '../../types.js'\nimport { CacheShort, generateCacheControlHeader } from '../Cache/strategies/index.js'\nimport Redirect from '../Redirect/Redirect.client.js'\n\nexport class UnagiResponse extends Response {\n  private wait = false\n  private cacheOptions: CachingStrategy = CacheShort()\n\n  private proxy = Object.defineProperties(Object.create(null), {\n    // Default values:\n    status: { value: 200, writable: true },\n    statusText: { value: '', writable: true },\n  })\n\n  // @ts-ignore\n  public status: number\n  // @ts-ignore\n  public statusText: string\n\n  constructor(...args: ConstructorParameters<typeof Response>) {\n    super(...args)\n\n    return new Proxy(this, {\n      get: (target, key) => target.proxy[key] ?? Reflect.get(target, key),\n      set: (target, key, value) =>\n        Reflect.set(key in target.proxy ? target.proxy : target, key, value),\n    })\n  }\n\n  /**\n   * Buffer the current response until all queries have resolved,\n   * and prevent it from streaming back early.\n   */\n  doNotStream() {\n    this.wait = true\n  }\n\n  canStream() {\n    return !this.wait\n  }\n\n  cache(options?: CachingStrategy) {\n    if (options) {\n      this.cacheOptions = options\n    }\n\n    return this.cacheOptions\n  }\n\n  get cacheControlHeader(): string {\n    return generateCacheControlHeader(this.cacheOptions)\n  }\n\n  redirect(location: string, status = 307) {\n    this.status = status\n    this.headers.set('location', location)\n\n    // in the case of an RSC request, instead render a client component that will redirect\n    return React.createElement(Redirect, { to: location })\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAGlB,wBAAuD;AACvD,6BAAqB;AAEd,MAAM,sBAAsB,SAAS;AAAA,EAe1C,eAAe,MAA8C;AAC3D,UAAM,GAAG,IAAI;AAff,SAAQ,OAAO;AACf,SAAQ,eAAgC,kCAAW;AAEnD,SAAQ,QAAQ,OAAO,iBAAiB,uBAAO,OAAO,IAAI,GAAG;AAAA,MAE3D,QAAQ,EAAE,OAAO,KAAK,UAAU,KAAK;AAAA,MACrC,YAAY,EAAE,OAAO,IAAI,UAAU,KAAK;AAAA,IAC1C,CAAC;AAUC,WAAO,IAAI,MAAM,MAAM;AAAA,MACrB,KAAK,CAAC,QAAQ,QAAQ,OAAO,MAAM,QAAQ,QAAQ,IAAI,QAAQ,GAAG;AAAA,MAClE,KAAK,CAAC,QAAQ,KAAK,UACjB,QAAQ,IAAI,OAAO,OAAO,QAAQ,OAAO,QAAQ,QAAQ,KAAK,KAAK;AAAA,IACvE,CAAC;AAAA,EACH;AAAA,EAMA,cAAc;AACZ,SAAK,OAAO;AAAA,EACd;AAAA,EAEA,YAAY;AACV,WAAO,CAAC,KAAK;AAAA,EACf;AAAA,EAEA,MAAM,SAA2B;AAC/B,QAAI,SAAS;AACX,WAAK,eAAe;AAAA,IACtB;AAEA,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,qBAA6B;AAC/B,WAAO,kDAA2B,KAAK,YAAY;AAAA,EACrD;AAAA,EAEA,SAAS,UAAkB,SAAS,KAAK;AACvC,SAAK,SAAS;AACd,SAAK,QAAQ,IAAI,YAAY,QAAQ;AAGrC,WAAO,qBAAM,cAAc,gCAAU,EAAE,IAAI,SAAS,CAAC;AAAA,EACvD;AACF;",
  "names": []
}
