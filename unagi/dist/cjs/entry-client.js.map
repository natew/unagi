{
  "version": 3,
  "sources": ["../../src/entry-client.tsx"],
  "sourcesContent": ["import {\n  createFromFetch,\n  createFromReadableStream,\n} from '@tamagui/unagi/vendor/react-server-dom-vite'\nimport React, {\n  ComponentType,\n  ElementType,\n  Fragment,\n  StrictMode,\n  Suspense,\n  useEffect,\n  useState,\n} from 'react'\nimport { hydrateRoot } from 'react-dom/client'\nimport { ErrorBoundary } from 'react-error-boundary'\n// @ts-expect-error\nimport CustomErrorPage from 'virtual__error.js'\n\nimport { RSC_PATHNAME } from './constants.js'\nimport { ServerPropsProvider } from './foundation/ServerPropsProvider/index.js'\nimport type { LocationServerProps } from './foundation/ServerPropsProvider/ServerPropsProvider.js'\nimport type { ClientConfig, ClientHandler } from './types.js'\nimport type { DevServerMessage } from './utilities/devtools.js'\n\nlet rscReader: ReadableStream | null\n\nconst cache = new Map()\n\n// Hydrate an SSR response from <meta> tags placed in the DOM.\nconst flightChunks: string[] = []\nconst FLIGHT_ATTRIBUTE = 'data-flight'\n\nfunction addElementToFlightChunks(el: Element) {\n  // We don't need to decode, because `.getAttribute` already decodes\n  const chunk = el.getAttribute(FLIGHT_ATTRIBUTE)\n  if (chunk) {\n    flightChunks.push(chunk)\n  }\n}\n\n// Get initial payload\ndocument.querySelectorAll('[' + FLIGHT_ATTRIBUTE + ']').forEach(addElementToFlightChunks)\n\n// Create a mutation observer on the document to detect when new\n// <meta data-flight> tags are added, and add them to the array.\nconst observer = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    mutation.addedNodes.forEach((node) => {\n      if (\n        node instanceof HTMLElement &&\n        node.tagName === 'META' &&\n        node.hasAttribute(FLIGHT_ATTRIBUTE)\n      ) {\n        addElementToFlightChunks(node)\n      }\n    })\n  })\n})\n\nobserver.observe(document.documentElement, {\n  childList: true,\n  subtree: true,\n})\n\nif (flightChunks.length > 0) {\n  const contentLoaded = new Promise((resolve) =>\n    document.addEventListener('DOMContentLoaded', resolve)\n  )\n\n  try {\n    rscReader = new ReadableStream({\n      start(controller) {\n        const encoder = new TextEncoder()\n        const write = (chunk: string) => {\n          controller.enqueue(encoder.encode(chunk))\n          return 0\n        }\n\n        flightChunks.forEach(write)\n        flightChunks.push = write\n\n        contentLoaded.then(() => {\n          controller.close()\n          observer.disconnect()\n        })\n      },\n    })\n  } catch (_) {\n    // Old browser, will try a new hydration request later\n  }\n}\n\nconst renderUnagi: ClientHandler = async (ClientWrapper) => {\n  const root = document.getElementById('root')\n\n  if (!root) {\n    console.error(`Could not find a root element <div id=\"root\"></div> to render.`)\n    return\n  }\n\n  if (import.meta.hot) {\n    import.meta.hot.on('unagi-browser-console', ({ type, data }: DevServerMessage) => {\n      if (type === 'warn') {\n        console.warn(data)\n      }\n    })\n  }\n\n  let config: ClientConfig\n  try {\n    config = JSON.parse(root.dataset.clientConfig ?? '{}')\n  } catch (error: any) {\n    config = {}\n    if (__UNAGI_DEV__) {\n      console.warn('Could not parse client configuration in browser', error.message)\n    }\n  }\n\n  const RootComponent =\n    // Default to StrictMode on, unless explicitly turned off\n    config.strictMode !== false ? StrictMode : Fragment\n\n  // Fixes hydration in `useId`: https://github.com/Shopify/hydrogen/issues/1589\n  const ServerRequestProviderMock = () => null\n\n  hydrateRoot(\n    root,\n    <RootComponent>\n      <ServerRequestProviderMock />\n      <ErrorBoundary\n        FallbackComponent={\n          CustomErrorPage\n            ? ({ error }) => <CustomErrorWrapper error={error} errorPage={CustomErrorPage} />\n            : DefaultError\n        }\n      >\n        <Suspense fallback={null}>\n          <Content clientWrapper={ClientWrapper} />\n        </Suspense>\n      </ErrorBoundary>\n    </RootComponent>\n  )\n}\n\nexport default renderUnagi\n\ninterface APIRouteRscResponse {\n  url: string\n  response: any\n}\n\nfunction Content({\n  clientWrapper: ClientWrapper = ({ children }: { children: JSX.Element }) => children,\n}: {\n  clientWrapper: ElementType\n}) {\n  const [serverProps, setServerProps] = useState<LocationServerProps>({\n    pathname: window.location.pathname,\n    search: window.location.search,\n  })\n  const [rscResponseFromApiRoute, setRscResponseFromApiRoute] =\n    useState<APIRouteRscResponse | null>(null)\n\n  const response = useServerResponse(serverProps, rscResponseFromApiRoute)\n\n  useEffect(() => {\n    // If server props ever change, then use a fresh\n    // _rsc request and ignore any response from API routes.\n    setRscResponseFromApiRoute(null)\n  }, [serverProps])\n\n  return (\n    <ServerPropsProvider\n      initialServerProps={serverProps}\n      setServerPropsForRsc={setServerProps}\n      setRscResponseFromApiRoute={setRscResponseFromApiRoute}\n    >\n      <ClientWrapper>{response.readRoot()}</ClientWrapper>\n    </ServerPropsProvider>\n  )\n}\n\nfunction CustomErrorWrapper({\n  error,\n  errorPage,\n}: {\n  error: Error\n  errorPage: () => Promise<{ default: ComponentType<any> }>\n}) {\n  const Error = React.lazy(errorPage)\n  return (\n    <ErrorBoundary\n      FallbackComponent={({ error: errorRenderingCustomPage }) => {\n        if (import.meta.env.DEV) {\n          console.error('Error rendering custom error page:\\n' + errorRenderingCustomPage)\n        }\n        return <DefaultError error={error} />\n      }}\n    >\n      <Suspense fallback={null}>\n        <Error error={error} />\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\n\nfunction DefaultError({ error }: { error: Error }) {\n  return (\n    <div\n      style={{\n        padding: '2em',\n        textAlign: 'center',\n      }}\n    >\n      <h1 style={{ fontSize: '2em', marginBottom: '1em', fontWeight: 'bold' }}>\n        Something&apos;s wrong here...\n      </h1>\n\n      <div style={{ fontSize: '1.1em' }}>\n        <p>We found an error while loading this page.</p>\n        <p>\n          Please, refresh or go back to the{' '}\n          <a href=\"/\" style={{ textDecoration: 'underline' }}>\n            home page\n          </a>\n          .\n        </p>\n      </div>\n    </div>\n  )\n}\n\nfunction useServerResponse(state: any, apiRouteRscResponse: APIRouteRscResponse | null) {\n  const key = JSON.stringify(state)\n\n  if (apiRouteRscResponse) {\n    cache.clear()\n    cache.set(apiRouteRscResponse.url, apiRouteRscResponse.response)\n    return apiRouteRscResponse.response\n  }\n\n  let response = cache.get(key)\n  if (response) {\n    return response\n  }\n\n  if (rscReader) {\n    // The flight response was inlined during SSR, use it directly.\n    response = createFromReadableStream(rscReader)\n    rscReader = null\n  } else {\n    if (\n      /* @ts-ignore */\n      window.BOOMR &&\n      /* @ts-ignore */\n      window.BOOMR.plugins &&\n      /* @ts-ignore */\n      window.BOOMR.plugins.Unagi\n    ) {\n      /* @ts-ignore */\n      window.BOOMR.plugins.Unagi.trackSubPageLoadPerformance()\n    }\n\n    // Request a new flight response.\n    response = createFromFetch(fetch(`${RSC_PATHNAME}?state=` + encodeURIComponent(key)))\n  }\n\n  cache.clear()\n  cache.set(key, response)\n  return response\n}\n"],
  "mappings": "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",
  "names": []
}
