{
  "version": 3,
  "sources": ["../../../../../src/foundation/HydrogenRequest/tests/HydrogenRequest.test.ts"],
  "sourcesContent": ["import {IncomingMessage} from 'http';\nimport {RSC_PATHNAME} from '../../../constants.js';\nimport {PreloadOptions} from '../../../types.js';\nimport {\n  CacheLong,\n  CacheShort,\n  CacheNone,\n} from '../../Cache/strategies/index.js';\nimport {shouldPreloadQuery} from '../../useQuery/index.js';\nimport {PreloadQueryEntry, HydrogenRequest} from '../HydrogenRequest.server.js';\n\ndescribe('HydrogenRequest', () => {\n  it('converts node request to Fetch API request', () => {\n    const request = createHydrogenRequest('/', {\n      'user-agent': 'Shopify Computer',\n    });\n    expect(request.headers.get('user-agent')).toBe('Shopify Computer');\n  });\n\n  describe('Cookies', () => {\n    it('creats a empty Map of cookies by default', () => {\n      const request = createHydrogenRequest('/');\n      expect(request.cookies.size).toBe(0);\n    });\n\n    it('provides just a really nice interface for Cookies', () => {\n      const request = createHydrogenRequest('/', {\n        cookie: 'shopifyCartId=12345; favoriteFruit=apple;',\n      });\n\n      expect(request.cookies.size).toBe(2);\n      expect(request.cookies.get('shopifyCartId')).toBe('12345');\n    });\n\n    it('handles JSON serialized Cookies', () => {\n      const cookieKey = 'productIds';\n      const productIds = ['productId1=', 'productId2='];\n      const serializedProductIds = JSON.stringify(productIds);\n\n      const request = createHydrogenRequest('/', {\n        cookie: `shopifyCartId=12345; ${cookieKey}=${serializedProductIds}`,\n      });\n\n      expect(JSON.parse(request.cookies.get(cookieKey)!)).toStrictEqual(\n        productIds\n      );\n    });\n  });\n\n  it('Preloads queries with default cache', () => {\n    expect(shouldPreloadQuery()).toBe(true);\n    expect(shouldPreloadQuery({})).toBe(true);\n    expect(shouldPreloadQuery({cache: {}})).toBe(true);\n  });\n\n  it('Preloads queries with manual cache', () => {\n    expect(shouldPreloadQuery({cache: CacheShort()})).toBe(true);\n    expect(shouldPreloadQuery({cache: CacheLong()})).toBe(true);\n  });\n\n  it('Does not preload with no cache', () => {\n    expect(shouldPreloadQuery({cache: CacheNone()})).toBe(false);\n  });\n\n  it('Does not preload with default cache and preloading explicitly turned off', () => {\n    expect(shouldPreloadQuery({preload: false})).toBe(false);\n    expect(shouldPreloadQuery({cache: {}, preload: false})).toBe(false);\n  });\n\n  it('Does not preload with manual cache and preloading explicitly turned off', () => {\n    expect(shouldPreloadQuery({cache: CacheShort(), preload: false})).toBe(\n      false\n    );\n    expect(shouldPreloadQuery({cache: CacheLong(), preload: false})).toBe(\n      false\n    );\n  });\n\n  it('Preloads queries with caching disabled and preloading explicitly turned on', () => {\n    expect(shouldPreloadQuery({cache: CacheNone(), preload: true})).toBe(true);\n  });\n\n  it('saves preload queries', () => {\n    const request = createHydrogenRequest(`https://localhost:3000/`);\n    request.savePreloadQuery(createPreloadQueryEntry('test1', true));\n    request.savePreloadQueries();\n\n    const preloadQueries = request.getPreloadQueries();\n    expect(preloadQueries).toBeDefined();\n    expect(preloadQueries && preloadQueries.get('test1'))\n      .toMatchInlineSnapshot(`\n      Object {\n        \"fetcher\": [Function],\n        \"key\": Array [\n          \"test1\",\n        ],\n        \"preload\": true,\n      }\n    `);\n  });\n\n  it('get preload queries on sub-sequent load', () => {\n    const request = createHydrogenRequest(`https://localhost:3000/`);\n    request.savePreloadQuery(createPreloadQueryEntry('test1', true));\n    request.savePreloadQueries();\n\n    const request2 = createHydrogenRequest(`https://localhost:3000/`);\n\n    const preloadQueries = request2.getPreloadQueries();\n    expect(preloadQueries).toBeDefined();\n    expect(preloadQueries && preloadQueries.get('test1'))\n      .toMatchInlineSnapshot(`\n      Object {\n        \"fetcher\": [Function],\n        \"key\": Array [\n          \"test1\",\n        ],\n        \"preload\": true,\n      }\n    `);\n  });\n\n  it('populates buyer IP using Node socket by default', () => {\n    const request = createHydrogenRequest('/', undefined, '123.4.5.6');\n\n    expect(request.getBuyerIp()).toBe('123.4.5.6');\n  });\n\n  it('allows buyer IP header to be overridden', () => {\n    const request = createHydrogenRequest('/', {foo: '234.5.6.7'});\n    request.ctx.buyerIpHeader = 'foo';\n\n    expect(request.getBuyerIp()).toBe('234.5.6.7');\n  });\n\n  it('provides a normalized URL for both RSC and standard requests', () => {\n    const request = createHydrogenRequest('https://shopify.dev/foo?bar=baz');\n    expect(request.normalizedUrl).toBe('https://shopify.dev/foo?bar=baz');\n\n    const rscRequest = createHydrogenRequest(\n      `https://shopify.dev${RSC_PATHNAME}?state=${encodeURIComponent(\n        JSON.stringify({pathname: '/foo', search: '?bar=baz'})\n      )}`\n    );\n    expect(rscRequest.normalizedUrl).toBe('https://shopify.dev/foo?bar=baz');\n  });\n});\n\nfunction createHydrogenRequest(\n  url: string,\n  headers?: Record<string, string>,\n  remoteAddress?: string\n): HydrogenRequest {\n  // @ts-ignore\n  const nodeRequest = new IncomingMessage();\n  nodeRequest.method = 'GET';\n  nodeRequest.url = url;\n  nodeRequest.headers = headers ?? {};\n  // @ts-ignore\n  nodeRequest.socket = {remoteAddress: remoteAddress ?? '127.0.0.1'};\n\n  return new HydrogenRequest(nodeRequest);\n}\n\nfunction createPreloadQueryEntry(\n  key: string,\n  preload?: PreloadOptions\n): PreloadQueryEntry {\n  return {\n    key: [key],\n    fetcher: createFetcher(key),\n    preload,\n  };\n}\n\nfunction createFetcher(data: unknown): () => Promise<unknown> {\n  return () => Promise.resolve(data);\n}\n"],
  "mappings": "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",
  "names": []
}
