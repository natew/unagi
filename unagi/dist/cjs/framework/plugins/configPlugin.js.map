{
  "version": 3,
  "sources": ["../../../../src/framework/plugins/configPlugin.ts"],
  "sourcesContent": ["import { Plugin } from 'vite'\nimport type { BuildOptions } from 'vite'\n\nexport default () => {\n  const rollupOptions: BuildOptions['rollupOptions'] = {\n    output: {},\n  }\n\n  const isWorker = Boolean(process.env.WORKER) && process.env.WORKER !== 'undefined'\n\n  if (isWorker) {\n    /**\n     * By default, SSR dedupe logic gets bundled which runs `require('module')`.\n     * We don't want this in our workers runtime, because `require` is not supported.\n     */\n    rollupOptions.output = {\n      format: 'es',\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'development' && !process.env.LOCAL_DEV) {\n    /**\n     * Ofuscate production asset name - To prevent ad blocker logics that blocks\n     * certain files due to how it is named.\n     */\n    rollupOptions.output = {\n      ...rollupOptions.output,\n      chunkFileNames: 'assets/[hash].js',\n    }\n  }\n\n  return {\n    name: 'vite-plugin-unagi-config',\n    config: async (config, env) => ({\n      resolve: {\n        alias: {\n          // This library is currently included as a compiled vendor lib, not published yet to NPM\n          'react-server-dom-vite/client-proxy': require.resolve(\n            '@tamagui/unagi/vendor/react-server-dom-vite/esm/react-server-dom-vite-client-proxy.js'\n          ),\n        },\n      },\n\n      build: {\n        minify: config.build?.minify ?? (process.env.LOCAL_DEV ? false : 'esbuild'),\n        sourcemap: true,\n        rollupOptions: config.build?.rollupOptions\n          ? Object.assign(rollupOptions, config.build.rollupOptions)\n          : rollupOptions,\n        target: config.build?.ssr\n          ? isWorker\n            ? 'es2022' // CFW (Updates weekly to latest V8)\n            : 'es2020' // Node (Support for v14.19 used in SB)\n          : 'modules', // Browsers (Vite default value)\n      },\n\n      ssr: {\n        /**\n         * Tell Vite to bundle everything when we're building for Workers.\n         * Otherwise, bundle RSC plugin as a workaround to apply the vendor alias above.\n         */\n        noExternal: isWorker || [/react-server-dom-vite/],\n        target: isWorker ? 'webworker' : 'node',\n      },\n\n      // Reload when updating local Unagi lib\n      server: process.env.LOCAL_DEV && {\n        watch: {\n          ignored: ['!**/node_modules/@tamagui/unagi/**', '!**/node_modules/tamagui/**'],\n        },\n      },\n\n      optimizeDeps: {\n        exclude: [\n          '@tamagui/unagi',\n          '@tamagui/unagi/client',\n          '@tamagui/unagi/entry-client',\n          '@tamagui/unagi-ui',\n        ],\n        include: [\n          /**\n           * Additionally, the following dependencies have trouble loading the\n           * correct version of the dependency (server vs client). This tells Vite to take the\n           * server versions and optimize them for ESM.\n           */\n          'react-helmet-async',\n          'react-error-boundary',\n          /**\n           * Vite cannot find the following dependencies since they might be\n           * required in RSC asynchronously. This tells Vite to optimize them\n           * at server start to avoid posterior page reloads and issues (#429 #430).\n           */\n          'react',\n          'react-dom/client',\n          'react-server-dom-vite/client-proxy',\n          // https://github.com/vitejs/vite/issues/6215\n          'react/jsx-runtime',\n          // https://github.com/nfriedly/set-cookie-parser/issues/50\n          'set-cookie-parser',\n          'undici',\n        ],\n      },\n\n      define: {\n        __UNAGI_DEV__: env.mode !== 'production',\n        __UNAGI_WORKER__: isWorker,\n        __UNAGI_TEST__: false, // Used in unit tests\n      },\n\n      envPrefix: ['VITE_', 'PUBLIC_'],\n      base: process.env.UNAGI_ASSET_BASE_URL,\n    }),\n  } as Plugin\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,IAAO,uBAAQ,MAAM;AACnB,QAAM,gBAA+C;AAAA,IACnD,QAAQ,CAAC;AAAA,EACX;AAEA,QAAM,WAAW,QAAQ,QAAQ,IAAI,MAAM,KAAK,QAAQ,IAAI,WAAW;AAEvE,MAAI,UAAU;AAKZ,kBAAc,SAAS;AAAA,MACrB,QAAQ;AAAA,IACV;AAAA,EACF;AAEA,MAAI,QAAQ,IAAI,aAAa,iBAAiB,CAAC,QAAQ,IAAI,WAAW;AAKpE,kBAAc,SAAS;AAAA,MACrB,GAAG,cAAc;AAAA,MACjB,gBAAgB;AAAA,IAClB;AAAA,EACF;AAEA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,QAAQ,OAAO,QAAQ,QAAK;AAjChC;AAiCoC;AAAA,QAC9B,SAAS;AAAA,UACP,OAAO;AAAA,YAEL,sCACE;AAAA,UAEJ;AAAA,QACF;AAAA,QAEA,OAAO;AAAA,UACL,QAAQ,cAAO,UAAP,mBAAc,WAAW,SAAQ,IAAI,YAAY,QAAQ;AAAA,UACjE,WAAW;AAAA,UACX,eAAe,cAAO,UAAP,mBAAc,iBACzB,OAAO,OAAO,eAAe,OAAO,MAAM,aAAa,IACvD;AAAA,UACJ,QAAQ,cAAO,UAAP,mBAAc,OAClB,WACE,WACA,WACF;AAAA,QACN;AAAA,QAEA,KAAK;AAAA,UAKH,YAAY,YAAY,CAAC,uBAAuB;AAAA,UAChD,QAAQ,WAAW,cAAc;AAAA,QACnC;AAAA,QAGA,QAAQ,QAAQ,IAAI,aAAa;AAAA,UAC/B,OAAO;AAAA,YACL,SAAS,CAAC,sCAAsC,6BAA6B;AAAA,UAC/E;AAAA,QACF;AAAA,QAEA,cAAc;AAAA,UACZ,SAAS;AAAA,YACP;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA,SAAS;AAAA,YAMP;AAAA,YACA;AAAA,YAMA;AAAA,YACA;AAAA,YACA;AAAA,YAEA;AAAA,YAEA;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,QAEA,QAAQ;AAAA,UACN,eAAe,IAAI,SAAS;AAAA,UAC5B,kBAAkB;AAAA,UAClB,gBAAgB;AAAA,QAClB;AAAA,QAEA,WAAW,CAAC,SAAS,SAAS;AAAA,QAC9B,MAAM,QAAQ,IAAI;AAAA,MACpB;AAAA;AAAA,EACF;AACF;",
  "names": []
}
