{
  "version": 3,
  "sources": ["../../../src/framework/cache.test.ts"],
  "sourcesContent": ["import { describe, expect, it, vi } from 'vitest'\n\nimport { InMemoryCache } from './cache'\n\ndescribe('In-Memory Cache', () => {\n  const clock = { timestamp: 0 }\n  Date.now = vi.fn(() => clock.timestamp)\n\n  const advanceTimeBy = (ms: number) => {\n    clock.timestamp += ms\n  }\n\n  it('uses cache control header to persist', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/')\n    const response = new Response('Hello World')\n    response.headers.set('cache-control', 'max-age=60')\n    await cache.put(request, response)\n\n    advanceTimeBy(59 * 1000)\n\n    const cachedResponse = await cache.match(request)\n    expect(cachedResponse).toBeDefined()\n    expect(cachedResponse!.headers.get('cache-control')).toBe(response.headers.get('cache-control'))\n    expect(cachedResponse!.headers.get('cache')).toBe('HIT')\n\n    advanceTimeBy(2 * 1000)\n\n    expect(await cache.match(request)).toBeUndefined()\n  })\n\n  it('supports stale-while-revalidate', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/')\n    const response = new Response('Hello World')\n    response.headers.set('cache-control', 'max-age=10, stale-while-revalidate=60')\n    await cache.put(request, response)\n\n    advanceTimeBy(9 * 1000)\n\n    let cachedResponse\n\n    cachedResponse = await cache.match(request)\n    expect(cachedResponse).toBeDefined()\n    expect(cachedResponse!.headers.get('cache')).toBe('HIT')\n\n    advanceTimeBy(2 * 1000)\n\n    cachedResponse = await cache.match(request)\n    expect(cachedResponse).toBeDefined()\n    expect(cachedResponse!.headers.get('cache')).toBe('STALE')\n\n    advanceTimeBy(60 * 1000)\n    expect(await cache.match(request)).toBeUndefined()\n  })\n\n  it('supports deleting cache entries', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/')\n    const response = new Response('Hello World')\n    response.headers.set('cache-control', 'max-age=10')\n    await cache.put(request, response)\n\n    advanceTimeBy(9 * 1000)\n\n    const cachedResponse = await cache.match(request)\n    expect(cachedResponse).toBeDefined()\n    expect(cachedResponse!.headers.get('cache')).toBe('HIT')\n\n    expect(await cache.delete(request)).toBeTruthy()\n\n    expect(await cache.match(request)).toBeUndefined()\n  })\n\n  it('deletes entry when encountering cache MISS', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/')\n    const response = new Response('Hello World')\n    response.headers.set('cache-control', 'max-age=10')\n    cache.put(request, response)\n\n    advanceTimeBy(11 * 1000)\n\n    expect(await cache.match(request)).toBeUndefined()\n\n    // Falsy indicates there was nothing to be deleted\n    expect(await cache.delete(request)).toBeFalsy()\n  })\n\n  it('reads the body', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/')\n    const response = new Response('Hello World')\n    await cache.put(request, response)\n\n    const cachedResponse = await cache.match(request)\n    expect(await cachedResponse!.text()).toBe('Hello World')\n  })\n\n  it('does not cache non-GET requests', async () => {\n    const cache = new InMemoryCache()\n    for (const method of ['POST', 'PUT', 'PATCH', 'DELETE']) {\n      const request = new Request('https://tamagui.dev/', { method })\n      const response = new Response('Hello World')\n\n      await expect(cache.put(request, response)).rejects.toThrow(\n        'Cannot cache response to non-GET request'\n      )\n    }\n  })\n\n  it('does not match non-GET requests', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/')\n    const response = new Response('Hello World')\n\n    await cache.put(request, response)\n\n    for (const method of ['POST', 'PUT', 'PATCH', 'DELETE']) {\n      const request = new Request('https://tamagui.dev/', { method })\n\n      expect(await cache.match(request)).toBeUndefined()\n    }\n  })\n\n  it('does not cache responses to a range request (status 206)', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/', {\n      headers: { Range: 'bytes=0-10' },\n    })\n    const response = new Response('Hello World', { status: 206 })\n\n    await expect(cache.put(request, response)).rejects.toThrow(\n      'Cannot cache response to a range request'\n    )\n  })\n\n  it('does not cache responses containing vary=* header', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/')\n    const response = new Response('Hello World')\n    response.headers.set('vary', '*')\n\n    await expect(cache.put(request, response)).rejects.toThrow(\n      `Cannot cache response with 'Vary: *' header.`\n    )\n  })\n\n  it('stores the response status', async () => {\n    const cache = new InMemoryCache()\n    const request = new Request('https://tamagui.dev/')\n    const response = new Response('Hello World', { status: 404 })\n    await cache.put(request, response)\n\n    const cachedResponse = await cache.match(request)\n    expect(cachedResponse!.status).toBe(404)\n  })\n})\n"],
  "mappings": "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",
  "names": []
}
