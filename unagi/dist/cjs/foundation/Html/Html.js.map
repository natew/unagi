{
  "version": 3,
  "sources": ["../../../../src/foundation/Html/Html.tsx"],
  "sourcesContent": ["/// <reference types=\"vite/client\" />\nimport React, { ReactNode } from 'react'\nimport type { HelmetData as HeadData } from 'react-helmet-async'\n\nimport { ClientConfig, ResolvedUnagiConfig } from '../../types.js'\n\ntype HtmlOptions = {\n  children: ReactNode\n  template: string\n  htmlAttrs?: Record<string, string>\n  bodyAttrs?: Record<string, string>\n  unagiConfig: ResolvedUnagiConfig\n}\n\nconst HTML_ATTR_SEP_RE = /(?<!=)\"\\s+/gim\nconst getHtmlAttrs = (template: string) => template.match(/<html\\s+([^>]+?)\\s*>/s)?.[1] || ''\nconst getBodyAttrs = (template: string) => template.match(/<body\\s+([^>]+?)\\s*>/s)?.[1] || ''\n\nconst REACT_ATTR_MAP = Object.create(null) as Record<string, string>\nREACT_ATTR_MAP.class = 'className'\nREACT_ATTR_MAP.style = 'data-style' // Ignore string styles, it breaks React\n\nfunction attrsToProps(attrs: string) {\n  attrs = attrs?.trim()\n\n  // Assume all attributes are surrounded by double quotes.\n  return attrs\n    ? Object.fromEntries(\n        attrs.split(HTML_ATTR_SEP_RE).map((attr) => {\n          const [key, value] = attr.replace(/\"/g, '').split(/=(.+)/)\n          return [REACT_ATTR_MAP[key.toLowerCase()] || key, value]\n        })\n      )\n    : {}\n}\n\nfunction propsToAttrs(props: Record<string, string>) {\n  return Object.entries(props)\n    .map(([key, value]) => `${key === REACT_ATTR_MAP.class ? 'class' : key}=\"${value}\"`)\n    .join(' ')\n}\n\nconst clientConfigOptions = ['strictMode'] as (keyof ClientConfig)[]\n\nexport function Html({ children, template, htmlAttrs, bodyAttrs, unagiConfig }: HtmlOptions) {\n  let head = template.match(/<head>(.+?)<\\/head>/s)![1] || ''\n\n  // @ts-ignore\n  if (import.meta.env.DEV) {\n    // Fix React Refresh for async scripts.\n    // https://github.com/vitejs/vite/issues/6759\n    head =\n      '<script></script>' + // Fix for Firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1737882\n      head.replace(/>(\\s*?import[\\s\\w]+?['\"]\\/@react-refresh)/, ' async=\"\">$1')\n  }\n\n  const clientConfig = {} as ClientConfig\n  for (const key of clientConfigOptions) {\n    if (unagiConfig[key] != null) {\n      clientConfig[key] = unagiConfig[key]\n    }\n  }\n\n  const clientConfigAttr =\n    Object.keys(clientConfig).length > 0 ? JSON.stringify(clientConfig) : undefined\n\n  return (\n    <html // eslint-disable-line jsx-a11y/html-has-lang\n      {...attrsToProps(getHtmlAttrs(template))}\n      {...htmlAttrs}\n    >\n      <head dangerouslySetInnerHTML={{ __html: head }} />\n      <body {...attrsToProps(getBodyAttrs(template))} {...bodyAttrs}>\n        <div id=\"root\" data-client-config={clientConfigAttr}>\n          {children}\n        </div>\n      </body>\n    </html>\n  )\n}\n\nexport function applyHtmlHead(html: string, head: HeadData, template: string) {\n  const { bodyAttrs, htmlAttrs, ...headTags } = extractHeadElements(head, template)\n\n  return html\n    .replace(/<head>(.*?)<\\/head>/s, generateHeadTag(headTags as Record<string, any>))\n    .replace(/<html[^>]*?>/s, htmlAttrs ? `<html ${htmlAttrs}>` : '$&')\n    .replace(/<body[^>]*?>/s, bodyAttrs ? `<body ${bodyAttrs}>` : '$&')\n}\n\nfunction extractHeadElements({ context: { helmet } }: HeadData, template: string) {\n  // There might be existing attributes in the template that are\n  // duplicated in the helmet. Transform them to props and back\n  // to string attributes to remove duplicates.\n  const htmlUniqueProps = attrsToProps(`${getHtmlAttrs(template)} ${helmet.htmlAttributes}`)\n  const bodyUniqueProps = attrsToProps(`${getBodyAttrs(template)} ${helmet.bodyAttributes}`)\n\n  return {\n    htmlAttrs: propsToAttrs(htmlUniqueProps),\n    bodyAttrs: propsToAttrs(bodyUniqueProps),\n    base: helmet.base.toString(),\n    link: helmet.link.toString(),\n    meta: helmet.meta.toString(),\n    noscript: helmet.noscript.toString(),\n    script: helmet.script.toString(),\n    style: helmet.style.toString(),\n    title: helmet.title.toString(),\n  }\n}\n\n/**\n * Generate the contents of the `head` tag, and update the existing `<title>` tag\n * if one exists, and if a title is passed.\n */\nfunction generateHeadTag({ title, ...rest }: Record<string, string>) {\n  const headProps = ['base', 'meta', 'style', 'noscript', 'script', 'link']\n\n  const otherHeadProps = headProps\n    .map((prop) => rest[prop])\n    .filter(Boolean)\n    .join('\\n')\n\n  return (_outerHtml: string, innerHtml: string) => {\n    let headHtml = otherHeadProps + innerHtml\n\n    if (title) {\n      if (headHtml.includes('<title>')) {\n        headHtml = headHtml.replace(/(<title>(?:.|\\n)*?<\\/title>)/, title)\n      } else {\n        headHtml += title\n      }\n    }\n\n    return `<head>${headHtml}</head>`\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
