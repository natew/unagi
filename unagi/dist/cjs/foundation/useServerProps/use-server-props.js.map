{
  "version": 3,
  "sources": ["../../../../src/foundation/useServerProps/use-server-props.tsx"],
  "sourcesContent": ["import { useContext } from 'react'\n\nimport {\n  InternalServerPropsContextValue,\n  ServerPropsContext,\n  ServerPropsContextValue,\n} from '../ServerPropsProvider/ServerPropsProvider.js'\n\n/**\n * The `useServerProps` hook allows you to manage the [server props](https://shopify.dev/custom-storefronts/hydrogen/framework/server-props) passed to your server components when using Hydrogen as a React Server Component framework. The server props get cleared when you navigate from one route to another.\n *\n * ## Return value\n *\n * The `useServerProps` hook returns an object with the following keys:\n *\n * | Key              | Description                                                                            |\n * | ---------------- | -------------------------------------------------------------------------------------- |\n * | `serverProps`    | The current server props.                                                              |\n * | `setServerProps` | A function used to modify server props.                                                |\n * | `pending`        | Whether a [transition is pending](https://github.com/reactwg/react-18/discussions/41). |\n *\n */\nexport function useServerProps(): ServerPropsContextValue {\n  const internalServerPropsContext = useContext<InternalServerPropsContextValue>(ServerPropsContext)\n\n  if (!internalServerPropsContext) {\n    return {} as ServerPropsContextValue\n  }\n\n  return {\n    serverProps: internalServerPropsContext.serverProps,\n    setServerProps: internalServerPropsContext.setServerProps,\n    pending: internalServerPropsContext.pending,\n  }\n}\n\n/**\n * Internal-only hook to manage server state, including to set location server state\n * @internal\n */\nexport function useInternalServerProps(): InternalServerPropsContextValue {\n  return (\n    useContext<InternalServerPropsContextValue>(ServerPropsContext) ??\n    ({} as InternalServerPropsContextValue)\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA2B;AAE3B,iCAIO;AAgBA,0BAAmD;AACxD,QAAM,6BAA6B,6BAA4C,6CAAkB;AAEjG,MAAI,CAAC,4BAA4B;AAC/B,WAAO,CAAC;AAAA,EACV;AAEA,SAAO;AAAA,IACL,aAAa,2BAA2B;AAAA,IACxC,gBAAgB,2BAA2B;AAAA,IAC3C,SAAS,2BAA2B;AAAA,EACtC;AACF;AAMO,kCAAmE;AACxE,SACE,6BAA4C,6CAAkB,KAC7D,CAAC;AAEN;",
  "names": []
}
