{
  "version": 3,
  "sources": ["../../../../src/foundation/Cache/cache.ts"],
  "sourcesContent": ["import type { CachingStrategy } from '../../types.js'\nimport { logCacheApiStatus } from '../../utilities/log/index.js'\nimport { getCache } from '../runtime.js'\nimport { CacheShort, generateCacheControlHeader } from './strategies/index.js'\n\nfunction getCacheControlSetting(\n  userCacheOptions?: CachingStrategy,\n  options?: CachingStrategy\n): CachingStrategy {\n  if (userCacheOptions && options) {\n    return {\n      ...userCacheOptions,\n      ...options,\n    }\n  } else {\n    return userCacheOptions || CacheShort()\n  }\n}\n\nexport function generateDefaultCacheControlHeader(userCacheOptions?: CachingStrategy): string {\n  return generateCacheControlHeader(getCacheControlSetting(userCacheOptions))\n}\n\n/**\n * Get an item from the cache. If a match is found, returns a tuple\n * containing the `JSON.parse` version of the response as well\n * as the response itself so it can be checked for staleness.\n */\nexport async function getItemFromCache(request: Request): Promise<Response | undefined> {\n  const cache = getCache()\n  if (!cache) {\n    return\n  }\n\n  const response = await cache.match(request)\n  if (!response) {\n    logCacheApiStatus('MISS', request.url)\n    return\n  }\n\n  logCacheApiStatus('HIT', request.url)\n\n  return response\n}\n\n/**\n * Put an item into the cache.\n */\nexport async function setItemInCache(\n  request: Request,\n  response: Response,\n  userCacheOptions: CachingStrategy\n) {\n  const cache = getCache()\n  if (!cache) {\n    return\n  }\n\n  /**\n   * We are manually managing staled request by adding this workaround.\n   * Why? cache control header support is dependent on hosting platform\n   *\n   * For example:\n   *\n   * Cloudflare's Cache API does not support `stale-while-revalidate`.\n   * Cloudflare cache control header has a very odd behaviour.\n   * Say we have the following cache control header on a request:\n   *\n   *   public, max-age=15, stale-while-revalidate=30\n   *\n   * When there is a cache.match HIT, the cache control header would become\n   *\n   *   public, max-age=14400, stale-while-revalidate=30\n   *\n   * == `stale-while-revalidate` workaround ==\n   * Update response max-age so that:\n   *\n   *   max-age = max-age + stale-while-revalidate\n   *\n   * For example:\n   *\n   *   public, max-age=1, stale-while-revalidate=9\n   *                    |\n   *                    V\n   *   public, max-age=10, stale-while-revalidate=9\n   *\n   * Store the following information in the response header:\n   *\n   *   cache-put-date   - UTC time string of when this request is PUT into cache\n   *\n   * Note on `cache-put-date`: The `response.headers.get('date')` isn't static. I am\n   * not positive what date this is returning but it is never over 500 ms\n   * after subtracting from the current timestamp.\n   *\n   * `isStale` function will use the above information to test for stale-ness of a cached response\n   */\n\n  const cacheControl = getCacheControlSetting(userCacheOptions)\n\n  // The padded cache-control to mimic stale-while-revalidate\n  request.headers.set(\n    'cache-control',\n    generateDefaultCacheControlHeader(\n      getCacheControlSetting(cacheControl, {\n        maxAge: (cacheControl.maxAge || 0) + (cacheControl.staleWhileRevalidate || 0),\n      })\n    )\n  )\n  // The cache-control we want to set on response\n  const cacheControlString = generateDefaultCacheControlHeader(getCacheControlSetting(cacheControl))\n\n  // CF will override cache-control, so we need to keep a\n  // non-modified real-cache-control\n  response.headers.set('cache-control', cacheControlString)\n  response.headers.set('real-cache-control', cacheControlString)\n  response.headers.set('cache-put-date', new Date().toUTCString())\n\n  logCacheApiStatus('PUT', request.url)\n  await cache.put(request, response)\n}\n\nexport async function deleteItemFromCache(request: Request) {\n  const cache = getCache()\n  if (!cache) return\n\n  logCacheApiStatus('DELETE', request.url)\n  await cache.delete(request)\n}\n\n/**\n * Manually check the response to see if it's stale.\n */\nexport function isStale(request: Request, response: Response) {\n  const responseDate = response.headers.get('cache-put-date')\n  const cacheControl = response.headers.get('real-cache-control')\n  let responseMaxAge = 0\n\n  if (cacheControl) {\n    const maxAgeMatch = cacheControl.match(/max-age=(\\d*)/)\n    if (maxAgeMatch && maxAgeMatch.length > 1) {\n      responseMaxAge = parseFloat(maxAgeMatch[1])\n    }\n  }\n\n  if (!responseDate) {\n    return false\n  }\n\n  const ageInMs = new Date().valueOf() - new Date(responseDate as string).valueOf()\n  const age = ageInMs / 1000\n\n  const result = age > responseMaxAge\n\n  if (result) {\n    logCacheApiStatus('STALE', request.url)\n  }\n\n  return result\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,iBAAkC;AAClC,qBAAyB;AACzB,wBAAuD;AAEvD,gCACE,kBACA,SACiB;AACjB,MAAI,oBAAoB,SAAS;AAC/B,WAAO;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF,OAAO;AACL,WAAO,oBAAoB,kCAAW;AAAA,EACxC;AACF;AAEO,2CAA2C,kBAA4C;AAC5F,SAAO,kDAA2B,uBAAuB,gBAAgB,CAAC;AAC5E;AAOA,gCAAuC,SAAiD;AACtF,QAAM,QAAQ,6BAAS;AACvB,MAAI,CAAC,OAAO;AACV;AAAA,EACF;AAEA,QAAM,WAAW,MAAM,MAAM,MAAM,OAAO;AAC1C,MAAI,CAAC,UAAU;AACb,sCAAkB,QAAQ,QAAQ,GAAG;AACrC;AAAA,EACF;AAEA,oCAAkB,OAAO,QAAQ,GAAG;AAEpC,SAAO;AACT;AAKA,8BACE,SACA,UACA,kBACA;AACA,QAAM,QAAQ,6BAAS;AACvB,MAAI,CAAC,OAAO;AACV;AAAA,EACF;AAyCA,QAAM,eAAe,uBAAuB,gBAAgB;AAG5D,UAAQ,QAAQ,IACd,iBACA,kCACE,uBAAuB,cAAc;AAAA,IACnC,QAAS,cAAa,UAAU,KAAM,cAAa,wBAAwB;AAAA,EAC7E,CAAC,CACH,CACF;AAEA,QAAM,qBAAqB,kCAAkC,uBAAuB,YAAY,CAAC;AAIjG,WAAS,QAAQ,IAAI,iBAAiB,kBAAkB;AACxD,WAAS,QAAQ,IAAI,sBAAsB,kBAAkB;AAC7D,WAAS,QAAQ,IAAI,kBAAkB,IAAI,KAAK,EAAE,YAAY,CAAC;AAE/D,oCAAkB,OAAO,QAAQ,GAAG;AACpC,QAAM,MAAM,IAAI,SAAS,QAAQ;AACnC;AAEA,mCAA0C,SAAkB;AAC1D,QAAM,QAAQ,6BAAS;AACvB,MAAI,CAAC;AAAO;AAEZ,oCAAkB,UAAU,QAAQ,GAAG;AACvC,QAAM,MAAM,OAAO,OAAO;AAC5B;AAKO,iBAAiB,SAAkB,UAAoB;AAC5D,QAAM,eAAe,SAAS,QAAQ,IAAI,gBAAgB;AAC1D,QAAM,eAAe,SAAS,QAAQ,IAAI,oBAAoB;AAC9D,MAAI,iBAAiB;AAErB,MAAI,cAAc;AAChB,UAAM,cAAc,aAAa,MAAM,eAAe;AACtD,QAAI,eAAe,YAAY,SAAS,GAAG;AACzC,uBAAiB,WAAW,YAAY,EAAE;AAAA,IAC5C;AAAA,EACF;AAEA,MAAI,CAAC,cAAc;AACjB,WAAO;AAAA,EACT;AAEA,QAAM,UAAU,IAAI,KAAK,EAAE,QAAQ,IAAI,IAAI,KAAK,YAAsB,EAAE,QAAQ;AAChF,QAAM,MAAM,UAAU;AAEtB,QAAM,SAAS,MAAM;AAErB,MAAI,QAAQ;AACV,sCAAkB,SAAS,QAAQ,GAAG;AAAA,EACxC;AAEA,SAAO;AACT;",
  "names": []
}
