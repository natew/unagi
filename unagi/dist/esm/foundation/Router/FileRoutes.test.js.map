{
  "version": 3,
  "sources": ["../../../../src/foundation/Router/FileRoutes.test.tsx"],
  "sourcesContent": ["import { ImportGlobEagerOutput } from '../../types.js'\nimport { createPageRoutes } from '../FileRoutes/FileRoutes.server.js'\n\nconst STUB_MODULE = { default: {}, api: null }\n\nit('converts normal pages to routes', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/contact.server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n  ])\n})\n\nit('handles index pages', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/contact.server.jsx': STUB_MODULE,\n    './routes/index.server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n  ])\n})\n\nit('handles nested index pages', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/products/index.server.jsx': STUB_MODULE,\n    './routes/products/[handle].server.jsx': STUB_MODULE,\n    './routes/blogs/index.server.jsx': STUB_MODULE,\n    './routes/products/snowboards/fastones/index.server.jsx': STUB_MODULE,\n    './routes/articles/index.server.jsx': STUB_MODULE,\n    './routes/articles/[...handle].server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n\n  expect(routes).toEqual([\n    {\n      path: '/products',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/blogs',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/products/snowboards/fastones',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/articles',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/products/:handle',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/articles/:handle',\n      component: STUB_MODULE.default,\n      exact: false,\n    },\n  ])\n})\n\nit('handles dynamic paths', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/contact.server.jsx': STUB_MODULE,\n    './routes/index.server.jsx': STUB_MODULE,\n    './routes/products/[handle].server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/products/:handle',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n  ])\n})\n\nit('handles catch all routes', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/contact.server.jsx': STUB_MODULE,\n    './routes/index.server.jsx': STUB_MODULE,\n    './routes/products/[...handle].server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/products/:handle',\n      component: STUB_MODULE.default,\n      exact: false,\n    },\n  ])\n})\n\nit('handles nested dynamic paths', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/contact.server.jsx': STUB_MODULE,\n    './routes/index.server.jsx': STUB_MODULE,\n    './routes/products/[handle].server.jsx': STUB_MODULE,\n    './routes/blogs/[handle]/[articleHandle].server.jsx': STUB_MODULE,\n    './routes/blogs/[handle]/[...articleHandle].server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/products/:handle',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/blogs/:handle/:articleHandle',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/blogs/:handle/:articleHandle',\n      component: STUB_MODULE.default,\n      exact: false,\n    },\n  ])\n})\n\nit('prioritizes overrides next to dynamic paths', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/contact.server.jsx': STUB_MODULE,\n    './routes/index.server.jsx': STUB_MODULE,\n    './routes/products/[handle].server.jsx': STUB_MODULE,\n    // Alphabetically, `hoodie` will likely come after `[handle]`\n    './routes/products/hoodie.server.jsx': STUB_MODULE,\n    './routes/blogs/[handle]/[articleHandle].server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    // But in the routes, it needs to come first!\n    {\n      path: '/products/hoodie',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/products/:handle',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/blogs/:handle/:articleHandle',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n  ])\n})\n\nit('handles typescript paths', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/contact.server.tsx': STUB_MODULE,\n    './routes/index.server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n  ])\n})\n\nit('lowercases routes', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/Contact.server.jsx': STUB_MODULE,\n    './routes/index.server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './routes')\n\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n  ])\n})\n\nit('factors in the top-level path prefix', () => {\n  const pages: ImportGlobEagerOutput = {\n    './routes/contact.server.jsx': STUB_MODULE,\n    './routes/index.server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '/foo/*', './routes')\n\n  expect(routes).toEqual([\n    {\n      path: '/foo/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/foo/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n  ])\n})\n\nit('uses a custom file directory path', () => {\n  const pages: ImportGlobEagerOutput = {\n    './custom/contact.server.jsx': STUB_MODULE,\n    './custom/index.server.jsx': STUB_MODULE,\n  }\n\n  const routes = createPageRoutes(pages, '*', './custom')\n\n  expect(routes).toEqual([\n    {\n      path: '/contact',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n    {\n      path: '/',\n      component: STUB_MODULE.default,\n      exact: true,\n    },\n  ])\n})\n"],
  "mappings": "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",
  "names": []
}
