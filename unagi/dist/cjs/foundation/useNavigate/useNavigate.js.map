{
  "version": 3,
  "sources": ["../../../../src/foundation/useNavigate/useNavigate.ts"],
  "sourcesContent": ["import { useRouter } from '../Router/BrowserRouter.client.js'\nimport { useBasePath } from '../useRouteParams/RouteParamsProvider.client.js'\n\ntype NavigationOptions = {\n  /** Whether to update the state object or URL of the current history entry. Defaults to false. */\n  replace?: boolean\n\n  /** Whether to reload the whole document on navigation. */\n  reloadDocument?: boolean\n\n  /** The custom client state with the navigation. */\n  clientState?: any\n\n  /** Whether to emulate natural browser behavior and restore scroll position on navigation. Defaults to true. */\n  scroll?: any\n\n  basePath?: string\n}\n\n/**\n * The useNavigate hook imperatively navigates between routes.\n */\nexport function useNavigate() {\n  const router = useRouter()\n  const routeBasePath = useBasePath()\n\n  return (path: string, options: NavigationOptions = { replace: false, reloadDocument: false }) => {\n    path = buildPath(options.basePath ?? routeBasePath, path)\n\n    const state = {\n      ...options?.clientState,\n      scroll: options?.scroll ?? true,\n    }\n\n    // @todo wait for RSC and then change focus for a11y?\n    if (options?.replace) {\n      router.history.replace(path, state)\n    } else {\n      router.history.push(path, state)\n    }\n  }\n}\n\nexport function buildPath(basePath: string, path: string) {\n  if (path.startsWith('http') || path.startsWith('//')) return path\n\n  let builtPath = path\n  if (basePath !== '/') {\n    const pathFirstChar = path.charAt(0)\n    const basePathLastChar = basePath.charAt(basePath.length - 1)\n\n    builtPath =\n      pathFirstChar === '/' && basePathLastChar === '/'\n        ? basePath + path.substring(1)\n        : basePathLastChar !== '/' && pathFirstChar !== '/'\n        ? basePath + '/' + path\n        : basePath + path\n  }\n  return builtPath\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA0B;AAC1B,wCAA4B;AAqBrB,uBAAuB;AAC5B,QAAM,SAAS,2CAAU;AACzB,QAAM,gBAAgB,mDAAY;AAElC,SAAO,CAAC,MAAc,UAA6B,EAAE,SAAS,OAAO,gBAAgB,MAAM,MAAM;AAC/F,WAAO,UAAU,QAAQ,YAAY,eAAe,IAAI;AAExD,UAAM,QAAQ;AAAA,MACZ,GAAG,mCAAS;AAAA,MACZ,QAAQ,oCAAS,WAAU;AAAA,IAC7B;AAGA,QAAI,mCAAS,SAAS;AACpB,aAAO,QAAQ,QAAQ,MAAM,KAAK;AAAA,IACpC,OAAO;AACL,aAAO,QAAQ,KAAK,MAAM,KAAK;AAAA,IACjC;AAAA,EACF;AACF;AAEO,mBAAmB,UAAkB,MAAc;AACxD,MAAI,KAAK,WAAW,MAAM,KAAK,KAAK,WAAW,IAAI;AAAG,WAAO;AAE7D,MAAI,YAAY;AAChB,MAAI,aAAa,KAAK;AACpB,UAAM,gBAAgB,KAAK,OAAO,CAAC;AACnC,UAAM,mBAAmB,SAAS,OAAO,SAAS,SAAS,CAAC;AAE5D,gBACE,kBAAkB,OAAO,qBAAqB,MAC1C,WAAW,KAAK,UAAU,CAAC,IAC3B,qBAAqB,OAAO,kBAAkB,MAC9C,WAAW,MAAM,OACjB,WAAW;AAAA,EACnB;AACA,SAAO;AACT;",
  "names": []
}
