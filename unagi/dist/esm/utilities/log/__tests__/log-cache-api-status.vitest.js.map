{
  "version": 3,
  "sources": ["../../../../../src/utilities/log/__tests__/log-cache-api-status.vitest.ts"],
  "sourcesContent": ["import {vi, type Mocked} from 'vitest';\nimport {stripColors} from 'kolorist';\nimport {Logger, setLogger} from '../index.js';\nimport {logCacheApiStatus} from '../log-cache-api-status.js';\n\nlet mockedLogger: Mocked<Logger>;\n\ndescribe('cache header log', () => {\n  beforeEach(() => {\n    mockedLogger = {\n      trace: vi.fn(),\n      debug: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn(),\n      fatal: vi.fn(),\n      options: vi.fn(() => ({})),\n    };\n\n    setLogger({...mockedLogger, showCacheApiStatus: true});\n  });\n\n  afterEach(() => {\n    setLogger(undefined);\n  });\n\n  it('should log cache api status', () => {\n    logCacheApiStatus(\n      'HIT',\n      'https://shopify.dev/?%22__QUERY_CACHE_ID__%22%22hydrogen-preview.myshopify.com%22%22unstable%22%22%7B%5C%22query%5C%22:%5C%22query%20shopInfo%20%7B%5C%5Cn%20%20shop'\n    );\n\n    expect(mockedLogger.debug).toHaveBeenCalled();\n    expect(mockedLogger.debug.mock.calls[0][0]).toEqual({});\n    expect(\n      stripColors(mockedLogger.debug.mock.calls[0][1])\n    ).toMatchInlineSnapshot('\"[Cache] HIT      query shopInfo\"');\n  });\n});\n"],
  "mappings": "AAAA;AACA;AACA;AACA;AAEA,IAAI;AAEJ,SAAS,oBAAoB,MAAM;AACjC,aAAW,MAAM;AACf,mBAAe;AAAA,MACb,OAAO,GAAG,GAAG;AAAA,MACb,OAAO,GAAG,GAAG;AAAA,MACb,MAAM,GAAG,GAAG;AAAA,MACZ,OAAO,GAAG,GAAG;AAAA,MACb,OAAO,GAAG,GAAG;AAAA,MACb,SAAS,GAAG,GAAG,MAAO,EAAC,EAAE;AAAA,IAC3B;AAEA,cAAU,EAAC,GAAG,cAAc,oBAAoB,KAAI,CAAC;AAAA,EACvD,CAAC;AAED,YAAU,MAAM;AACd,cAAU,MAAS;AAAA,EACrB,CAAC;AAED,KAAG,+BAA+B,MAAM;AACtC,sBACE,OACA,sKACF;AAEA,WAAO,aAAa,KAAK,EAAE,iBAAiB;AAC5C,WAAO,aAAa,MAAM,KAAK,MAAM,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;AACtD,WACE,YAAY,aAAa,MAAM,KAAK,MAAM,GAAG,EAAE,CACjD,EAAE,sBAAsB,mCAAmC;AAAA,EAC7D,CAAC;AACH,CAAC;",
  "names": []
}
